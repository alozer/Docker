**********************************************************************************************************************************************************

************************
**********NETWORK*******
**********START*********
************************

#Docker create custom user-network:
--------------------------------------

	docker network create efatura-cloud-dev
	
************************
**********NETWORK*******
**********END***********
************************	

**********************************************************************************************************************************************************	
	
************************
**********MONGO*********
**********START*********
************************

#Mongo Container Docker start:
------------------------------

	docker run --name efatura-cloud-mongo-dev --network efatura-cloud-dev --publish 27017:27017 --detach -v /home/efatura-cloud/mongo-data:/data/db mongo
 
#Mongo Express Container Docker start:
--------------------------------------

	# debug mode
	docker run --name efatura-cloud-mongo-express-dev -it --rm -e ME_CONFIG_MONGODB_SERVER=efatura-cloud-mongo-dev --network efatura-cloud-dev --publish 8081:8081 mongo-express

	# detach mode
	docker run --name efatura-cloud-mongo-express-dev -e ME_CONFIG_MONGODB_SERVER=efatura-cloud-mongo-dev --network efatura-cloud-dev --detach --publish 8082:8081 mongo-express
	
************************
**********MONGO*********
**********END***********
************************

**********************************************************************************************************************************************************

************************
**********TOMCAT********
**********START*********
************************

#Tomcat image Docker build:
---------------------------

	docker build -t efatura-cloud-tomcat .

#Tomcat Docker container start:
-------------------------------

	docker run --name efatura-cloud-tomcat-dev --network efatura-cloud-dev --publish 8081:8080 --detach efatura-cloud-tomcat

************************	
**********TOMCAT********
**********END***********	
************************

**********************************************************************************************************************************************************

************************
**********VUE***********
**********START*********
************************	

#Vue.js Docker image build

	docker build -t efatura-cloud-dockerize-vuejs-app .

#Vue.js Container start

	# debug mode
	docker run --name efatura-cloud-vuejs-dev -v ${PWD}:/app -v /app/node_modules --network efatura-cloud-dev --publish 8080:8080 efatura-cloud-dockerize-vuejs-app
	
	# detach mode
	docker run --name efatura-cloud-vuejs-dev -v ${PWD}:/app -v /app/node_modules --network efatura-cloud-dev --detach --publish 8080:8080 efatura-cloud-dockerize-vuejs-app
	
************************
**********VUE***********
**********END***********
************************	

**********************************************************************************************************************************************************

*****************************
**********WEBLOGIC***********
**********START**************
*****************************

#create bridge network
	docker network create -d bridge weblogic
	
#Run AdminServer
	docker run -d -p 8001:8001 --net weblogic --name=wlsadmin playniuniu/weblogic-domain:12.2.1.2

	You can login your web with http://127.0.0.1:8001/console
	username: weblogic
	password: welcome1

#Run ManagedServer
	docker run -d --net weblogic -p 7001:7001 -e MS_NAME=ManageServer-01 playniuniu/weblogic-domain:12.2.1.2 create-managed.sh

*****************************
**********WEBLOGIC***********
**********END****************
*****************************